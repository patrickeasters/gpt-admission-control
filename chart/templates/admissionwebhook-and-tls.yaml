{{- $host := include "gpt-admission-webhook.fullname" . -}}
{{- $ca := genCAWithKey "webhook-ca" 3650 (genPrivateKey "ecdsa") -}}
{{- $cert := genSignedCertWithKey $host nil (list $host (print $host "." .Release.Namespace) (print $host "." .Release.Namespace ".svc") (print $host "." .Release.Namespace ".svc.cluster.local")) 3650 $ca (genPrivateKey "ecdsa") -}}
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "gpt-admission-webhook.fullname" . }}
webhooks:
- name: gpt-webhook.patrick.easte.rs
  rules:
  - apiGroups:   ["apps"]
    apiVersions: ["v1"]
    operations:  ["CREATE", UPDATE]
    resources:   ["deployments","daemonset","statefulset"]
    scope:       "Namespaced"
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "gpt-admission-webhook.fullname" . }}
      path: /admission
{{- /* TODO: Maybe look into cert-manager to avoid using
       a Helm-generated TLS keypair. */}}
    caBundle: {{ $ca.Cert | b64enc }}
  admissionReviewVersions: ["v1"]
  sideEffects: None
  timeoutSeconds: 5
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "gpt-admission-webhook.fullname" . }}-tls
  labels:
    {{- include "gpt-admission-webhook.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install
data:
  server.crt: {{ $cert.Cert | b64enc }}
  server.key: {{ $cert.Key | b64enc }}